{"version":3,"sources":["Context.js","Component/contacts/Contact.js","Component/contacts/Contacts.js","Component/layout/Header.js","Component/test/Test.js","Component/contacts/AddContact.js","Component/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","Provider","dispatch","setState","axios","get","then","res","data","value","this","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","name","email","phone","className","onClick","style","cursor","bind","color","float","defaultProps","Contacts","Fragment","map","key","Header","branding","href","to","Test","title","body","fetch","response","json","AddContacts","onSubmit","e","preventDefault","uuid","onChange","target","htmlFor","placeholder","App","exact","path","component","About","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.04f1c658.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nconst Context=React.createContext();\r\nconst reducer=(state,action)=> {\r\nswitch(action.type ){\r\n    case 'DELETE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts: state.contacts.filter(contact=>\r\n                contact.id !== action.payload)\r\n        };\r\n        case 'ADD_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts: [action.payload,\r\n                ...state.contacts]\r\n                \r\n        };\r\n        default:\r\n            return state;\r\n}\r\n\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state={\r\n        contacts:[],\r\n        dispatch: action =>this.setState(state => reducer(state,action))\r\n        \r\n    }; \r\n\r\ncomponentDidMount()\r\n{\r\n    axios.get('https://jsonplaceholder.typicode.com/users')\r\n    .then(res => this.setState({contacts:res.data}))\r\n}\r\n    render() {\r\n        return (\r\n            <Context.Provider value ={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer=Context.Consumer;\r\n\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from 'axios';\r\nimport { Consumer } from '../../Context';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n  onDeleteClick= (id,dispatch) =>\r\n  {\r\n    axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    .then(res => dispatch({type:'DELETE_CONTACT',payload:id}));\r\n    \r\n\r\n\r\n\r\n    \r\n    };\r\n\r\n  render() {\r\n    const {id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n\r\n   \r\n    return (\r\n      <Consumer>\r\n        {value =>{\r\n          const { dispatch } =value;\r\n          return(\r\n            <div className=\"card card-body mb-3\">\r\n        <h4>\r\n          Name:{name}\r\n          <i\r\n            onClick={() =>\r\n              this.setState({ showContactInfo: !this.state.showContactInfo })\r\n            }\r\n            className=\"fal fa-sort-down\"\r\n            style={{cursor:'pointer'}}\r\n          />\r\n          <i \r\n           onClick={this.onDeleteClick.bind\r\n            (this,id,dispatch)\r\n          }\r\n          \r\n          className=\"fas fa-times\" style={{cursor:'pointer' ,color:'red',float:'right'}} \r\n\r\n         />\r\n        </h4>\r\n        {showContactInfo ? (\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\"> Email: {email} </li>\r\n            <li className=\"list-group-item\"> Phone: {phone} </li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nContact.defaultProps = {\r\n  name: \"Admin\",\r\n  email: \"admin@gmail.com\",\r\n  phone: \"123456789\",\r\n};\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n\r\n};\r\n\r\n//</li>const nameStyling = { //Styling with the helpof variables\r\n//  color: 'red',\r\n//TextTransform: 'uppercase'\r\n//}\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport {Consumer} from '../../Context'\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return(\r\n      <Consumer>\r\n        {value =>\r\n        {\r\n          const { contacts }=value;\r\n          return(\r\n            <React.Fragment>\r\n              <div className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact List</span>\r\n              </div>\r\n        {contacts.map((contact) => (\r\n          <Contact key={contact.id} contact={contact} />\r\n        ))}\r\n      </React.Fragment>\r\n          )\r\n        }}\r\n\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 \">\r\n     <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n               <i className=\"fas fa-home\"/>Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n              <i className=\"fas fa-plus\"/>Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-question\"/>About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    \r\n  );\r\n};\r\n\r\nHeader.defaultProps = { branding: \"My App\" };\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\nexport default Header;\r\n","import React, { Component } from 'react'\r\n\r\n class Test extends Component {\r\n\r\n    state={\r\n        title:'',\r\n        body:''\r\n    };\r\n\r\n    componentDidMount()\r\n    {\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n  .then(response => response.json())\r\n  .then(data => this.setState({\r\n      title:data.title,\r\n      body:data.body\r\n  }))\r\n        \r\n    }\r\n    \r\n   // componentWillMount()\r\n    //{\r\n      //  console.log('component');\r\n    //}\r\n    \r\n    //componentUpdateMount()\r\n    //{\r\n      //  console.log('coentdid');\r\n    //}\r\n\r\n    //UNSAFE_componentWillUpdate()\r\n    //{\r\n      //  console.log('hello');\r\n    //}\r\n    render() {\r\n        const {title,body}=this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from '../../Context';\r\nimport uuid from 'uuid'\r\n\r\nclass AddContacts extends Component {\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:''\r\n    };\r\n\r\n    onSubmit=(dispatch,e) => {\r\n        e.preventDefault();\r\n\r\n        const {name,email,phone}=this.state;\r\n\r\n        const newContact= {\r\n            id:uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n        dispatch({type: 'ADD_CONTACT',payload:newContact});\r\n\r\n        //clear the data\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:''\r\n        })\r\n    };\r\n\r\n    onChange=e=> this.setState({[e.target.name]:e.target.value});\r\n   \r\n\r\n    render() {\r\n        const {name,email,phone}=this.state;\r\n\r\n\r\n        return(\r\n           <Consumer>\r\n                { value =>{\r\n                        const {dispatch }=value;\r\n                        return(\r\n                            <div>\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">\r\n                        Add Contact\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        \r\n                        <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\" >Name</label>\r\n                                <input type=\"text\" \r\n                                name=\"name\"\r\n                                className=\"form-control\r\n                                 form-control-lg justify-content-lg-start\"\r\n                                 placeholder=\"Enter Name...\"\r\n                                 value={name}\r\n                                 onChange={this.onChange}\r\n                                 />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input type=\"email\" \r\n                                name=\"email\"\r\n                                className=\"form-control\r\n                                 form-control-lg\"\r\n                                 placeholder=\"Enter Email...\"\r\n                                  value={email}\r\n                                  onChange={this.onChange}\r\n                                  />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phone\">Phone</label>\r\n                                <input type=\"text\" \r\n                                name=\"phone\"\r\n                                className=\"form-control\r\n                                 form-control-lg\"\r\n                                 placeholder=\"Enter Phone...\"\r\n                                  value={phone}\r\n                                  onChange={this.onChange}\r\n                                  />\r\n                            </div>\r\n                            <input type=\"submit\" value=\"Add\" \r\n                            className=\"btn btn-light btn-block\"/>\r\n                        </form>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n                        )\r\n                    }\r\n                }\r\n        </Consumer>\r\n        )\r\n        \r\n    }\r\n}\r\nexport default AddContacts;","import React from 'react'\r\n\r\nexport default ()=> {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">Welcome to about</h1>\r\n            <p className=\"lead\">Don't Wait for anyone</p>\r\n        <p className=\"text-secondary\">Sab badhiya</p>        \r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom';\nimport Contacts from \"./Component/contacts/Contacts\";\nimport Header from \"./Component/layout/Header\";\nimport Test from \"./Component/test/Test\"\nimport  {Provider } from './Context';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\nimport AddContacts from \"./Component/contacts/AddContact\";\nimport About from './Component/pages/About';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n      <div className=\"App\">\n        <Header branding=\"Contact Manager\" />\n        <div className=\"conatiner\">\n          <Switch>\n          <Route exact path=\"/\" component=\n            {Contacts}/>\n            <Route exact path=\"/contact/add\" component=\n            {AddContacts}/>\n          <Route exact path=\"/about\" component=\n            {About}/>\n            <Route exact path=\"/test\" component=\n            {Test}/>\n          </Switch>\n          \n        </div>\n      </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}